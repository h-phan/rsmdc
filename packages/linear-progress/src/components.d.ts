/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface RsLinearProgress {
    'buffer': number;
    'bufferbarcolor': string;
    'close': boolean;
    'progress': number;
    'progressbarcolor': string;
    'reversed': boolean;
    'setBarColor': (color: string) => Promise<void>;
    'setBuffer': (value: number) => Promise<void>;
    'setBufferColor': (color: string) => Promise<void>;
    'setHeight': (height: number) => Promise<void>;
    'setProgress': (value: number) => Promise<void>;
    'stylingInnerElement': (value: any) => Promise<void>;
    'type': string;
  }
}

declare global {


  interface HTMLRsLinearProgressElement extends Components.RsLinearProgress, HTMLStencilElement {}
  var HTMLRsLinearProgressElement: {
    prototype: HTMLRsLinearProgressElement;
    new (): HTMLRsLinearProgressElement;
  };
  interface HTMLElementTagNameMap {
    'rs-linear-progress': HTMLRsLinearProgressElement;
  }
}

declare namespace LocalJSX {
  interface RsLinearProgress extends JSXBase.HTMLAttributes<HTMLRsLinearProgressElement> {
    'buffer'?: number;
    'bufferbarcolor'?: string;
    'close'?: boolean;
    'progress'?: number;
    'progressbarcolor'?: string;
    'reversed'?: boolean;
    'type'?: string;
  }

  interface IntrinsicElements {
    'rs-linear-progress': RsLinearProgress;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements extends LocalJSX.IntrinsicElements {}
  }
}


